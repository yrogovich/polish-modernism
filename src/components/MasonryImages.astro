---
const { images } = Astro.props;

const generateRandomSize = (possibleSizes = ['small', 'medium', 'large']) => {
  return possibleSizes[Math.floor(Math.random() * possibleSizes.length)];
}

const randomizeImagesOrder = (images) => {
  return images.sort(() => Math.random() - 0.5);
}

const randomizedImages = randomizeImagesOrder(images);
---

<section>
  <div class="container">
    <div class="grid">
      {randomizedImages.map((image, index) => {
        const isDivisibleBy2 = (index + 1) % 2 === 0;
        const isDivisibleBy3 = (index + 1) % 3 === 0;

        const marginTop =
          isDivisibleBy2 ? '5rem' : isDivisibleBy3 ? '10rem' : '0px';

        return (
          <>
            <div class="image" data-size={generateRandomSize()} style={{marginTop}}>
              <img src={image.src} alt={image.alt}/>
            </div>
            {isDivisibleBy3 && <div class="spacing" data-size={generateRandomSize()}></div>}
          </>
        )
      })}
    </div>
  </div>
</section>

<style lang="scss">
  .grid {
    padding-top: 50vh;
    padding-bottom: 50vh;

    display: grid;
    grid-template-columns: repeat(30, 1fr);
    grid-column-gap: 2rem;
    @include fluid-spacing('grid-row-gap', 100, 200);

    @include rwd(tablet) {
      grid-template-columns: repeat(12, 1fr);
    }

    @include rwd(mobile) {
      grid-gap: 10rem 2rem;
    }
  }

  .image {
    img {
      width: 100%;
    }

    &[data-size="small"] {
      grid-column: span 6;
      @include rwd(tablet) {
        grid-column: span 3;
      }
      @include rwd(mobile) {
        grid-column: span 6;
      }
    }
    &[data-size="medium"] {
      grid-column: span 10;
      @include rwd(tablet) {
        grid-column: span 4;
      }
      @include rwd(mobile) {
        grid-column: span 6;
      }
    }
    &[data-size="large"] {
      grid-column: span 15;
      @include rwd(tablet) {
        grid-column: span 12;
        margin-top: 0!important;
      }
    }
  }

  .spacing {
    &[data-size="small"] {
      grid-column: span 2;
      @include rwd(tablet) {
        grid-column: span 6;
      }
    }
    &[data-size="medium"] {
      grid-column: span 3;
      @include rwd(tablet) {
        grid-column: span 6;
      }
    }
    &[data-size="large"] {
      grid-column: span 4;
      @include rwd(tablet) {
        grid-column: span 6;
      }
    }
  }
</style>